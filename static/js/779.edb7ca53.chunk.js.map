{"version":3,"file":"static/js/779.edb7ca53.chunk.js","mappings":"sRAEMA,EAAmBC,EAAAA,GAAAA,IAAH,+FAMhBC,EAAcD,EAAAA,GAAAA,EAAH,oFAMXE,EAAgBF,EAAAA,GAAAA,KAAH,8C,SCTJ,SAASG,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAASC,EAAAA,EAAAA,MAmBf,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgB,EAAGJ,EAAOK,SAF3B,OAEhBC,EAFgB,OAGtBP,EAAgBO,EAASC,SAHH,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASnBT,EAAOK,SACTF,GAEH,GAAE,CAACH,EAAOK,WAGT,yBAC2B,IAAxBP,EAAaY,OACZZ,EAAaa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC/B,OACE,UAACtB,EAAD,YACE,UAACG,EAAD,WAAgBmB,EAAO,QACvB,SAACpB,EAAD,CACEqB,wBAAyB,CAAEC,OAAQH,OAHhBD,EAO1B,KAED,yBAAK,+CAIZ,C,2QC1CDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGX,IAAMC,EAAe,mCAAG,WAAMd,GAAN,uFACCY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,4BADD,cAChBe,EADgB,yBAGfA,EAASC,MAHM,2CAAH,sDAMfC,EAAe,mCAAG,WAAMjB,GAAN,uFACCY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,mBADD,cAChBe,EADgB,yBAGfA,EAASC,MAHM,2CAAH,sDAMfjB,EAAe,mCAAG,2GAAOmB,EAAP,+BAAc,EAAGlB,EAAjB,gCACCY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,wCAC2BkB,IAF5B,cAChBH,EADgB,yBAKfA,EAASC,MALM,2CAAH,qDAQfG,EAAW,mCAAG,WAAMD,GAAN,uFACKN,EAAAA,EAAAA,IAAA,+CACmBM,IAFxB,cACZH,EADY,yBAKXA,EAASC,MALE,2CAAH,sDAQXI,EAAY,mCAAG,2GAAOF,EAAP,+BAAc,EAAGG,EAAjB,gCACIT,EAAAA,EAAAA,IAAA,6BACCS,EADD,oDACkDH,IAFtD,cACbH,EADa,yBAKZA,EAASC,MALG,2CAAH,qDAQZM,EAAc,mCAAG,2GAAOJ,EAAP,+BAAc,EAAGK,EAAjB,+BAA4B,GAA5B,SACEX,EAAAA,EAAAA,IAAA,qCACSW,EADT,iBAC0BL,IAF5B,cACfH,EADe,yBAKdA,EAASC,MALK,2CAAH,qDAQdQ,EAAe,mCAAG,yGAAOC,EAAP,+BAAkB,KAAlB,SACCb,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,oBADD,cAChBV,EADgB,yBAGfA,EAASC,MAHM,2CAAH,qDAMfU,EAAkB,mCAAG,WAAMD,GAAN,uFACFb,EAAAA,EAAAA,IAAA,iBACXa,EADW,+BADE,cACnBV,EADmB,yBAKlBA,EAASC,MALS,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","helpers/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CommentContainer = styled.div`\n  background-color: #f2f2f2;\n  padding: 10px;\n  border-radius: 4px;\n`;\n\nconst CommentText = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  color: #333333;\n`;\n\nconst CommentAuthor = styled.span`\n  font-weight: bold;\n`;\n\nexport { CommentContainer, CommentText, CommentAuthor };\n","import { getMovieReviews } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CommentContainer, CommentText, CommentAuthor } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [aboutReviews, setAboutReviews] = useState([]);\n  const params = useParams();\n\n  // console.log(aboutReviews);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const totalRev = await getMovieReviews(1, params.movieId);\n        setAboutReviews(totalRev.results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (params.movieId) {\n      fetchMovieReviews();\n    }\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {aboutReviews.length !== 0 ? (\n        aboutReviews.map(({ id, content, author }) => {\n          return (\n            <CommentContainer key={id}>\n              <CommentAuthor>{author}:</CommentAuthor>\n              <CommentText\n                dangerouslySetInnerHTML={{ __html: content }}\n              ></CommentText>\n            </CommentContainer>\n          );\n        })\n      ) : (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '1313eb7d87ffc79c96ba5fefca3b8f25',\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-U`);\n\n  return response.data;\n};\n\nconst getMovieReviews = async (page = 1, movieId) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getTrending = async page => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst searchMovies = async (page = 1, query) => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getMovieGenres = async (page = 1, genresID = 14) => {\n  const response = await axios.get(\n    `discover/movie?with_genres=${genresID}&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getDetailPerson = async (idPerson = 2144) => {\n  const response = await axios.get(`person/${idPerson}?language=en-US`);\n\n  return response.data;\n};\n\nconst getTVCreditsPerson = async idPerson => {\n  const response = await axios.get(\n    `person/${idPerson}/tv_credits?language=en-US`\n  );\n\n  return response.data;\n};\n\nexport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getTrending,\n  searchMovies,\n  getMovieGenres,\n  getDetailPerson,\n  getTVCreditsPerson,\n};\n"],"names":["CommentContainer","styled","CommentText","CommentAuthor","Reviews","useState","aboutReviews","setAboutReviews","params","useParams","useEffect","fetchMovieReviews","getMovieReviews","movieId","totalRev","results","console","log","length","map","id","content","author","dangerouslySetInnerHTML","__html","axios","api_key","getMovieCredits","response","data","getMovieDetails","page","getTrending","searchMovies","query","getMovieGenres","genresID","getDetailPerson","idPerson","getTVCreditsPerson"],"sourceRoot":""}
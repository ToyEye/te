{"version":3,"file":"static/js/334.005a8d2a.chunk.js","mappings":"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","sources":["components/BackButton/BackButton.jsx","components/pages/MovieDetails.jsx","components/pages/MovieDetails.styled.js","components/pages/NotFoundPage.jsx","helpers/API.js"],"sourcesContent":["import { LinkBtnBack } from 'components/pages/MovieDetails.styled';\n\nexport const ButtonToBack = ({ location }) => {\n  return <LinkBtnBack to={location}>Back</LinkBtnBack>;\n};\n","import { getMovieDetails } from 'helpers/API';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { ButtonToBack } from 'components/BackButton/BackButton';\n\nimport {\n  // LinkBtnBack,\n  ContainerInfo,\n  ImgPoster,\n  TitleMovie,\n  UserScore,\n  OverView,\n  OverViewParagraph,\n  Genres,\n  GenresList,\n  GenresListItem,\n  AdditionalInfo,\n  LinkGenres,\n  AdditionalInfoList,\n  AdditionalNavLink,\n  AdditionalInfoListItem,\n} from './MovieDetails.styled';\n\nimport NotFoundPage from './NotFoundPage';\n\nexport default function MovieDetails() {\n  const [aboutMovie, setAboutMovie] = useState(null);\n  const [isNotFound, setIsNotFound] = useState();\n\n  const params = useParams();\n\n  const generLocation = useLocation();\n  const backLinkLocationRef = useRef(generLocation.state?.from ?? `/`);\n\n  useEffect(() => {\n    if (!params.movieId) {\n      return;\n    }\n\n    const fetchMovieDetails = async () => {\n      try {\n        const detailInfo = await getMovieDetails(params.movieId);\n        setAboutMovie(detailInfo);\n      } catch (err) {\n        setIsNotFound(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [params.movieId]);\n\n  if (isNotFound) {\n    return <NotFoundPage />;\n  }\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <ButtonToBack location={backLinkLocationRef.current} />\n      {aboutMovie && (\n        <ContainerInfo>\n          <ImgPoster\n            src={`https://image.tmdb.org/t/p/w200${aboutMovie.poster_path}`}\n            alt=\"\"\n          />\n\n          <div>\n            <TitleMovie>\n              {aboutMovie.title ??\n                aboutMovie.original_name ??\n                aboutMovie.name ??\n                aboutMovie.original_title}\n            </TitleMovie>\n            <UserScore>\n              User Score: {Math.ceil(aboutMovie.vote_average * 10)}%\n            </UserScore>\n            <OverView>Overview</OverView>\n            <OverViewParagraph>\n              {aboutMovie.overview ?? 'No overview available'}\n            </OverViewParagraph>\n            <Genres>Genres</Genres>\n            <GenresList>\n              {aboutMovie.genres ? (\n                aboutMovie.genres.map(genre => {\n                  return (\n                    <GenresListItem key={genre.id}>\n                      <LinkGenres\n                        to={`/GenreFilter/${genre.id}`}\n                        key={genre.id}\n                        state={{ from: generLocation }}\n                      >\n                        #{genre.name}\n                      </LinkGenres>\n                    </GenresListItem>\n                  );\n                })\n              ) : (\n                <li>No genres available</li>\n              )}\n            </GenresList>\n          </div>\n        </ContainerInfo>\n      )}\n      <AdditionalInfo>Additional informtaion</AdditionalInfo>\n      <div style={{ marginBottom: '20px' }}>\n        <AdditionalInfoList>\n          <AdditionalInfoListItem>\n            <AdditionalNavLink to={`/Movie/${params.movieId}/Cast`}>\n              Cast\n            </AdditionalNavLink>\n          </AdditionalInfoListItem>\n          <AdditionalInfoListItem>\n            <AdditionalNavLink to={`/Movie/${params.movieId}/Reviews`}>\n              Reviews\n            </AdditionalNavLink>\n          </AdditionalInfoListItem>\n        </AdditionalInfoList>\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LinkBtnBack = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  white-space: nowrap;\n\n  font-weight: 400;\n  text-decoration: none;\n\n  vertical-align: middle;\n\n  border: 1px solid transparent;\n  padding: 0.375rem 0.75rem;\n\n  font-size: 1rem;\n\n  line-height: 1.5;\n\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  background-color: #f7e6d1;\n  border-color: #d3b8a7;\n\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    color: #6c4c33;\n    text-decoration: none;\n    background-color: #ffd9b3;\n    border-color: #ffaf5f;\n  }\n`;\n\nconst ContainerInfo = styled.div`\n  display: flex;\n  column-gap: 16px;\n`;\n// const ImgPosterContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   align-items: center;\n// `;\n\nconst ImgPoster = styled.img`\n  display: block;\n\n  /* margin-right: 20px; */\n  max-width: 200px;\n`;\n\nconst TitleMovie = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst UserScore = styled.p`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nconst OverView = styled.h2`\n  margin-bottom: 10px;\n`;\nconst OverViewParagraph = styled.p`\n  width: 700px;\n  margin-bottom: 10px;\n`;\n\nconst Genres = styled.h2`\n  margin-bottom: 10px;\n`;\n\nconst GenresList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst GenresListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nconst LinkGenres = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n\n  border-radius: 4px;\n  background-color: #ffe8cc;\n\n  &:hover {\n    background-color: #ffd700;\n  }\n`;\n\nconst AdditionalInfo = styled.h3`\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  padding: 10px;\n  margin-top: 20px;\n  font-weight: bold;\n`;\n\nconst AdditionalInfoList = styled.ul`\n  display: flex;\n  margin-top: 25px;\n\n  column-gap: 28px;\n`;\n\nconst AdditionalNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n\n  background-color: #ff8c00;\n\n  border: 1px solid #ff8c00;\n  border-radius: 8px;\n  transition: color 250ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n\n  padding: 10px 20px;\n\n  &:hover {\n    color: #fff;\n    background-color: #ff9933;\n  }\n`;\n\nconst AdditionalInfoListItem = styled.li``;\n\nexport {\n  LinkBtnBack,\n  ContainerInfo,\n  ImgPoster,\n  TitleMovie,\n  UserScore,\n  OverView,\n  OverViewParagraph,\n  Genres,\n  GenresList,\n  GenresListItem,\n  LinkGenres,\n  AdditionalInfo,\n  AdditionalInfoList,\n  AdditionalNavLink,\n  AdditionalInfoListItem,\n};\n","import { Link } from 'react-router-dom';\n\nexport default function NotFoundPage() {\n  return (\n    <div>\n      Not Faund Page! Please, return to &nbsp;<Link to=\"/\">Home page</Link>\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '1313eb7d87ffc79c96ba5fefca3b8f25',\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-U`);\n\n  return response.data;\n};\n\nconst getMovieReviews = async (page = 1, movieId) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getTrending = async page => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst searchMovies = async (page = 1, query) => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getMovieGenres = async (page = 1, genresID = 14) => {\n  const response = await axios.get(\n    `discover/movie?with_genres=${genresID}&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getDetailPerson = async (idPerson = 2144) => {\n  const response = await axios.get(`person/${idPerson}?language=en-US`);\n\n  return response.data;\n};\n\nconst getTVCreditsPerson = async idPerson => {\n  const response = await axios.get(\n    `person/${idPerson}/tv_credits?language=en-US`\n  );\n\n  return response.data;\n};\n\nexport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getTrending,\n  searchMovies,\n  getMovieGenres,\n  getDetailPerson,\n  getTVCreditsPerson,\n};\n"],"names":["ButtonToBack","location","to","MovieDetails","useState","aboutMovie","setAboutMovie","isNotFound","setIsNotFound","params","useParams","generLocation","useLocation","backLinkLocationRef","useRef","state","from","useEffect","movieId","fetchMovieDetails","getMovieDetails","detailInfo","style","padding","current","src","poster_path","alt","title","original_name","name","original_title","Math","ceil","vote_average","overview","genres","map","genre","id","marginBottom","LinkBtnBack","styled","Link","ContainerInfo","ImgPoster","TitleMovie","UserScore","OverView","OverViewParagraph","Genres","GenresList","GenresListItem","LinkGenres","AdditionalInfo","AdditionalInfoList","AdditionalNavLink","NavLink","AdditionalInfoListItem","NotFoundPage","axios","api_key","getMovieCredits","response","data","getMovieReviews","page","getTrending","searchMovies","query","getMovieGenres","genresID","getDetailPerson","idPerson","getTVCreditsPerson"],"sourceRoot":""}
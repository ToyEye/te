{"version":3,"file":"static/js/824.1dbf9f67.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Person/DetailsCreditsPerson.jsx","components/Person/Person.jsx","components/Modal/PersonModal.jsx","components/Cast/Cast.jsx","helpers/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ActorCard = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 32px;\n  column-gap: 16px;\n  padding: 20px;\n`;\n\nconst ActorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 5%;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  cursor: pointer;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst ActorImage = styled.img`\n  display: block;\n  width: 200px;\n\n  border-radius: 5%;\n  object-fit: cover;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst ActorInfoContainer = styled.div`\n  padding: 12px 8px;\n`;\n\nconst ActorName = styled.h3`\n  margin-bottom: 8px;\n  text-align: center;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nconst ActorCharacter = styled.p`\n  text-align: center;\n  font-size: 10px;\n  color: #888;\n`;\n\nexport {\n  ActorCard,\n  ActorContainer,\n  ActorImage,\n  ActorInfoContainer,\n  ActorName,\n  ActorCharacter,\n};\n","import { getTVCreditsPerson } from 'helpers/API';\nimport { useEffect, useState } from 'react';\n\nconst DetailsCreditsPerson = ({ personId }) => {\n  const [tVCredits, setTVCredits] = useState([]);\n\n  useEffect(() => {\n    const fetchTVCreditsPerson = async () => {\n      try {\n        const detailsPers = await getTVCreditsPerson(personId);\n\n        setTVCredits(detailsPers.cast);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchTVCreditsPerson();\n  }, [personId]);\n  return (\n    <>\n      <h2 key={tVCredits.id}>Know for</h2>\n      {tVCredits.map(\n        ({\n          id,\n          name,\n          original_name,\n          overview,\n          first_air_date,\n          vote_average,\n          vote_count,\n          character,\n          poster_path,\n        }) => {\n          return (\n            <div ket={id}>\n              <h2>{name}</h2>\n              <p>Original Name: {original_name}</p>\n              <p>Overview: {overview}</p>\n              <p>First Air Date: {first_air_date}</p>\n              <p>Vote Average: {vote_average}</p>\n              <p>Vote Count: {vote_count}</p>\n              <p>Character: {character}</p>\n              <img\n                style={{ width: '100px' }}\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt={name}\n              />\n            </div>\n          );\n        }\n      )}\n    </>\n  );\n};\n\nexport { DetailsCreditsPerson };\n","import { getDetailPerson } from 'helpers/API';\nimport { useEffect, useState } from 'react';\n\n// import { useParams } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Person = ({ personId }) => {\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    const fetchPersonInfo = async () => {\n      try {\n        const detailsPers = await getDetailPerson(personId);\n\n        setDetails(detailsPers);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchPersonInfo();\n  }, [personId]);\n  const {\n    id,\n    biography,\n    // also_known_as,\n    birthday,\n    deathday,\n    gender,\n    known_for_department,\n    name,\n    place_of_birth,\n    profile_path,\n  } = details;\n\n  return (\n    <div key={id}>\n      <h2>{name}</h2>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w200${profile_path}`\n            : defaultImg\n        }\n        alt={name}\n      />\n\n      <h3>Biography</h3>\n      <p>{biography ? biography : '-'}</p>\n      <h3>Personal Information</h3>\n      <h4>Also Known As: </h4>\n      {/* <ul>\n        {also_known_as.map(known => {\n          return <li>{known}</li>;\n        })}\n      </ul> */}\n      <ul>\n        <li>\n          <strong>Birthday:</strong> {birthday ?? '-'}\n        </li>\n        <li>\n          <strong>Gender:</strong> {gender === 2 ? 'Male' : 'Female'}\n        </li>\n        <li>\n          <strong>Place of Birth:</strong> {place_of_birth ?? '-'}\n        </li>\n        <li>\n          <strong>Known for:</strong> {known_for_department}\n        </li>\n        <li>\n          <strong>Deathday:</strong> {deathday ?? '-'}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport { Person };\n","import { DetailsCreditsPerson } from 'components/Person/DetailsCreditsPerson';\nimport { Person } from 'components/Person/Person';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n\n    right: '75%',\n    bottom: 'auto',\n\n    maxHeight: '80%',\n    overflow: 'auto',\n\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst PersonModal = ({ modalIsOpen, closeModal, personId }) => {\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      style={customStyles}\n      onRequestClose={closeModal}\n    >\n      <Person personId={personId} />\n      <DetailsCreditsPerson personId={personId} />\n    </Modal>\n  );\n};\n\nexport { PersonModal };\n","import { getMovieCredits } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  ActorCard,\n  ActorContainer,\n  ActorImage,\n  ActorInfoContainer,\n  ActorName,\n  ActorCharacter,\n} from './Cast.styled';\nimport { PersonModal } from 'components/Modal/PersonModal';\n\n// import defaultPic from 'download.jpg';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function Cast() {\n  const [aboutCasts, setAboutCasts] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const params = useParams();\n  // const [isError, setIsError] = useState(false);\n  const [personId, setPersonId] = useState(null);\n  // console.log(personId);\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      // setIsError(false);\n\n      try {\n        const infoCast = await getMovieCredits(params.movieId);\n        setAboutCasts(infoCast.cast);\n\n        // if (infoCast.cast.length === 0) {\n        //   setIsError(true);\n        // } else {\n        //   setAboutCasts(infoCast.cast);\n        // }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (params.movieId) {\n      fetchMovieCredits();\n    }\n  }, [params.movieId]);\n\n  return (\n    <ActorCard>\n      {aboutCasts.map(({ id, profile_path, name, character }) => {\n        return (\n          <div\n            onClick={() => {\n              setShowModal(true);\n              setPersonId(id);\n            }}\n            key={id}\n            style={{ textDecoration: 'none' }}\n          >\n            <ActorContainer key={id}>\n              <ActorImage\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : defaultImg\n                }\n                alt={name}\n              />\n              <ActorInfoContainer>\n                <ActorName>{name}</ActorName>\n                <ActorCharacter>Character: {character}</ActorCharacter>\n              </ActorInfoContainer>\n            </ActorContainer>\n          </div>\n        );\n      })}\n      {showModal && (\n        <PersonModal\n          personId={personId}\n          modalIsOpen={showModal}\n          closeModal={() => setShowModal(false)}\n        ></PersonModal>\n      )}\n    </ActorCard>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '1313eb7d87ffc79c96ba5fefca3b8f25',\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-U`);\n\n  return response.data;\n};\n\nconst getMovieReviews = async (page = 1, movieId) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getTrending = async page => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst searchMovies = async (page = 1, query) => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getMovieGenres = async (page = 1, genresID = 14) => {\n  const response = await axios.get(\n    `discover/movie?with_genres=${genresID}&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getDetailPerson = async (idPerson = 2144) => {\n  const response = await axios.get(`person/${idPerson}?language=en-US`);\n\n  return response.data;\n};\n\nconst getTVCreditsPerson = async idPerson => {\n  const response = await axios.get(\n    `person/${idPerson}/tv_credits?language=en-US`\n  );\n\n  return response.data;\n};\n\nexport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getTrending,\n  searchMovies,\n  getMovieGenres,\n  getDetailPerson,\n  getTVCreditsPerson,\n};\n"],"names":["ActorCard","styled","ActorContainer","ActorImage","ActorInfoContainer","ActorName","ActorCharacter","DetailsCreditsPerson","personId","useState","tVCredits","setTVCredits","useEffect","fetchTVCreditsPerson","getTVCreditsPerson","detailsPers","cast","console","log","id","map","name","original_name","overview","first_air_date","vote_average","vote_count","character","poster_path","ket","style","width","src","alt","Person","details","setDetails","fetchPersonInfo","getDetailPerson","biography","birthday","deathday","gender","known_for_department","place_of_birth","profile_path","customStyles","content","top","left","right","bottom","maxHeight","overflow","marginRight","transform","Modal","PersonModal","modalIsOpen","closeModal","isOpen","onRequestClose","Cast","aboutCasts","setAboutCasts","showModal","setShowModal","params","useParams","setPersonId","fetchMovieCredits","getMovieCredits","movieId","infoCast","onClick","textDecoration","axios","api_key","response","data","getMovieDetails","getMovieReviews","page","getTrending","searchMovies","query","getMovieGenres","genresID","idPerson"],"sourceRoot":""}